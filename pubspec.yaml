name: bangumi_today
description: "Bangumi Source Aggregation Parser for Personal Use"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 0.6.4+8

environment:
  sdk: ">=3.9.0 <4.0.0"
  flutter: ">=3.35.0"

# To solve dependency conflicts between sdk and proj;
dependency_overrides:
  intl: ^0.19.0

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  app_links: ^6.4.1
  cached_network_image: ^3.4.0
  crypto: ^3.0.6
  cupertino_icons: ^1.0.8
  dart_rss: ^3.0.3
  device_info_plus: ^12.1.0
  dio: ^5.9.0
  dtorrent_parser: ^1.0.8
  dtorrent_task: ^0.4.0
  events_emitter2: ^1.0.4
  file_selector: ^1.0.3
  fl_chart: ^1.0.0
  fluent_ui: ^4.12.0
  fluentui_system_icons: ^1.1.273
  flutter:
    sdk: flutter
  flutter_acrylic: ^1.1.3
  flutter_dotenv: ^6.0.0
  flutter_rating_bar: ^4.0.1
  flutter_riverpod: ^2.6.1
  flutter_screenutil: ^5.9.1
  hive: ^2.2.3
  hooks_riverpod: ^2.6.1
  html: ^0.15.6
  html_unescape: ^2.0.0
  intl: ^0.19.0
  jiffy: ^6.3.1
  json_annotation: ^4.8.1
  local_notifier: ^0.1.6
  logger: ^2.6.1
  material_design_icons_flutter: ^7.0.7296
  package_info_plus: ^9.0.0
  path: ^1.9.0
  path_provider: ^2.1.5
  provider: ^6.1.5
  sqflite_common_ffi: ^2.3.5
  system_theme: ^3.1.2
  url_launcher: ^6.3.2
  window_manager: ^0.5.1
  windows_taskbar: ^1.1.2
  xml: ^6.5.0

dev_dependencies:
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  build_runner: ^2.9.0
  flutter_lints: ^6.0.0
  husky: ^0.1.7
  import_sorter: ^4.6.0 # dart run import_sorter:main
  json_serializable: 6.11.1
  lint_staged: ^0.5.1
  msix: ^3.16.12

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - .env
    - assets/fonts/
    - assets/images/logo.png
    - assets/images/platforms/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: SMonoSC
      fonts:
        - asset: assets/fonts/SarasaMonoSC-Regular.ttf
          style: normal

  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

# lint-staged
lint_staged:
  '**/*.dart': 'dart analyze --fatal-infos --fatal-warnings'
  '!lib/**/*.g.dart': 'dart format --set-exit-if-changed .'

# msix
msix_config:
  store: false
  capabilities: internetClient, privateNetworkClientServer
  protocol_activation: BangumiToday
  display_name: BangumiToday
  logo_path: assets/images/logo.png
  install_certificate: false
  certificate_path: BTMuli.pfx
  publisher: CN=目棃, C=CN, E=bt-muli@outlook.com
  publisher_display_name: BTMuli
  output_name: BangumiToday
  output_path: .
  languages: en-us, zh-cn
  identity_name: BangumiToday
  description: Better Bangumi Helper
